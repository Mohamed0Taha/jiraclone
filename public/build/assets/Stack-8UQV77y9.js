import{c as b,a as T,b as D,s as R,u as B}from"./DefaultPropsProvider-Bua-nAaA.js";import{r as p}from"./ProjectReportDialog-DJSS4N_t.js";import{j as F}from"./index-BgEJ3fxA.js";import{s as M,u as E}from"./useThemeProps-BWPYVe8w.js";import{g as G}from"./Typography-D7k_4FBJ.js";import{h as k,r as u,e as N,f as O,m as U,d as $,i as h}from"./createTheme-C_kE-Qd2.js";const A=$(),I=M("div",{name:"MuiStack",slot:"Root"});function L(e){return E({props:e,name:"MuiStack",defaultTheme:A})}function q(e,r){const n=p.Children.toArray(e).filter(Boolean);return n.reduce((a,c,t)=>(a.push(c),t<n.length-1&&a.push(p.cloneElement(r,{key:`separator-${t}`})),a),[])}const z=e=>({row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"})[e],H=({ownerState:e,theme:r})=>{let n={display:"flex",flexDirection:"column",...k({theme:r},u({values:e.direction,breakpoints:r.breakpoints.values}),a=>({flexDirection:a}))};if(e.spacing){const a=N(r),c=Object.keys(r.breakpoints.values).reduce((s,o)=>((typeof e.spacing=="object"&&e.spacing[o]!=null||typeof e.direction=="object"&&e.direction[o]!=null)&&(s[o]=!0),s),{}),t=u({values:e.direction,base:c}),m=u({values:e.spacing,base:c});typeof t=="object"&&Object.keys(t).forEach((s,o,i)=>{if(!t[s]){const l=o>0?t[i[o-1]]:"column";t[s]=l}}),n=O(n,k({theme:r},m,(s,o)=>e.useFlexGap?{gap:h(a,s)}:{"& > :not(style):not(style)":{margin:0},"& > :not(style) ~ :not(style)":{[`margin${z(o?t[o]:e.direction)}`]:h(a,s)}}))}return n=U(r.breakpoints,n),n};function J(e={}){const{createStyledComponent:r=I,useThemeProps:n=L,componentName:a="MuiStack"}=e,c=()=>T({root:["root"]},s=>D(a,s),{}),t=r(H);return p.forwardRef(function(s,o){const i=n(s),f=G(i),{component:l="div",direction:v="column",spacing:x=0,divider:y,children:g,className:j,useFlexGap:C=!1,...P}=f,S={direction:v,spacing:x,useFlexGap:C},V=c();return F.jsx(t,{as:l,ownerState:S,ref:o,className:b(V.root,j),...P,children:y?q(g,y):g})})}const _=J({createStyledComponent:R("div",{name:"MuiStack",slot:"Root"}),useThemeProps:e=>B({props:e,name:"MuiStack"})});export{_ as S};
